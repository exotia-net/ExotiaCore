//! SeaORM Entity. Generated by sea-orm-codegen 0.9.3

use sea_orm::entity::prelude::*;
use serde::Deserialize;
use utoipa::ToSchema;

#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel, Deserialize, ToSchema)]
#[sea_orm(table_name = "users")]
#[schema(as = lib::entities::users::Model, title = "Users")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub uuid: Uuid,
    pub nick: String,
    pub first_ip: String,
    pub last_ip: String,
    pub created_at: Option<DateTime>,
    pub updated_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_one = "super::survival_economy::Entity")]
    SurvivalEconomy,
    #[sea_orm(has_one = "super::cosmetics::Entity")]
    Cosmetics,
    #[sea_orm(has_one = "super::wallet::Entity")]
    Wallet,
}

impl Related<super::survival_economy::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SurvivalEconomy.def()
    }
}

impl Related<super::cosmetics::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Cosmetics.def()
    }
}

impl Related<super::wallet::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Wallet.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
